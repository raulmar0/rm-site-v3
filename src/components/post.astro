---
const { profilePic, title, description, thumbnail, buttonsObj, collectionId, id, useServerUrl, url } = Astro.props;
const buttonsArr = buttonsObj ? Object.entries(buttonsObj) : [];
// console.log(buttonsArr) 
const serverUrl = useServerUrl ? `https://rmperso-pb.fly.dev/api/files/${collectionId}/${id}/` : '';

console.log(description);
---

<div class="project--grid-container">
  <div class="project--img">
    <img
      src=`${serverUrl}${profilePic}`
      alt=""
    />
  </div>
  <div class="project--name vertical-center">
    <h4>{ title }</h4>
  </div>
  <div class="project--description vertical-center">
    {
      useServerUrl ? 
      <p>{ description }</p>
      : 
      <p>{ description?.substring(0, 60) } <a href={url}>... read more</a></p>
    }
  </div>
  <div class="project--thumbnail vertical-center">
    <img
      src=`${serverUrl}${thumbnail}`
      alt=""
    />
  </div>
  <div class="project--buttons vertical-center">
    { buttonsArr.map( (button: any) => (
        <div>
          <button>
            <a href={button[1]}>{button[0]}</a>
          </button>
        </div>
          
      ))
    }
  </div>
</div>

<style>

.project--grid-container {
  display: grid;
  max-width: 100%;
  height: 300px;
  grid-template-columns: 60px 1fr;
  grid-template-rows: 1fr 1.5fr 140px 70px;
  grid-template-areas:
    "img name"
    "img description"
    ". thumbnail"
    ". buttons";
  column-gap: 2rem;
  font-family: 'Inter', sans-serif;
  letter-spacing: var(--letter-spacing-xs);
  font-size: 1.4rem;
  border-bottom: 1px solid var(--border-color);
}

.project--img {
  grid-area: img;
  display: flex;
  align-items: center;
}

.project--img > img {
  width: 100%;
  border-radius: 50%;
  background-color: var(--border-color);

}

.project--name > h4, .project--description > p {
  margin: 0;
}

.project--name {
  grid-area: name;
  align-items: flex-end;
}

.project--name > h4 {
  color: var(--accent-color);
}


.project--description {
  grid-area: description;
  color: var(--secondary-color);
}

.project--thumbnail {
  grid-area: thumbnail;
  border: 1px solid var(--border-color);
  border-radius: 5px;
}

.project--thumbnail > img {
  width: 100%;
  height: 100%;
  border-radius: 5px;
  object-fit: cover;
}

.project--buttons {
  grid-area: buttons;
  gap: 1rem;
  /* overflow: scroll; */
}

.project--buttons > div > button {
  width: 110px;
  height: 35px;
  border: 1px solid var(--border-color);
  border-radius: 5px;
  background-color: var(--border-color);
  font-family: 'Inter', sans-serif;
  letter-spacing: var(--letter-spacing-sm);
  font-size: 1.3rem;
  font-weight: var(--font-weight-bold);
  cursor: pointer;
}

.project--buttons > div > button:hover {
  background-color: var(--accent-color);
}

.project--buttons > div > button:hover > a {
  color: var(--border-color);
}

button > a {
  text-decoration: none;
  color: var(--accent-color);
}

@media (min-width: 480px) {

  .project--grid-container {
    height: 330px;
    grid-template-rows: 1fr 1.5fr 180px 70px;
  }
}

</style>